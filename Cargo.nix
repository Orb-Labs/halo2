# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.

args@{
  release ? true,
  rootFeatures ? [
    "halo2/default"
    "halo2_proofs/default"
    "halo2_gadgets/default"
  ],
  rustPackages,
  buildRustPackages,
  hostPlatform,
  hostPlatformCpu ? null,
  hostPlatformFeatures ? [],
  target ? null,
  codegenOpts ? null,
  profileOpts ? null,
  rustcLinkFlags ? null,
  rustcBuildFlags ? null,
  mkRustCrate,
  rustLib,
  lib,
  workspaceSrc,
}:
let
  workspaceSrc = if args.workspaceSrc == null then ./. else args.workspaceSrc;
in let
  inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
  profilesByName = {
  };
  rootFeatures' = expandFeatures rootFeatures;
  overridableMkRustCrate = f:
    let
      drvs = genDrvsByProfile profilesByName ({ profile, profileName }: mkRustCrate ({ inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts rustcLinkFlags rustcBuildFlags; } // (f profileName)));
    in { compileMode ? null, profileName ? decideProfile compileMode release }:
      let drv = drvs.${profileName}; in if compileMode == null then drv else drv.override { inherit compileMode; };
in
{
  cargo2nixVersion = "0.11.0";
  workspace = {
    halo2 = rustPackages.unknown.halo2."0.1.0-beta.2";
    halo2_proofs = rustPackages.unknown.halo2_proofs."0.1.0";
    halo2_gadgets = rustPackages.unknown.halo2_gadgets."0.1.0";
  };
  "registry+https://github.com/rust-lang/crates.io-index".addr2line."0.17.0" = overridableMkRustCrate (profileName: rec {
    name = "addr2line";
    version = "0.17.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b9ecd88a8c8378ca913a680cd98f0f13ac67383d35993f86c90a70e3f137816b"; };
    dependencies = {
      gimli = rustPackages."registry+https://github.com/rust-lang/crates.io-index".gimli."0.26.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".adler."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "adler";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".adler32."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "adler32";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aae1277d39aeec15cb388266ecc24b11c80469deae6067e17a1a7aa9e5c1f234"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.6" = overridableMkRustCrate (profileName: rec {
    name = "ahash";
    version = "0.7.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fcb51a0695d8f838b1ee009b3fbf66bda078cd64590202a864a8f3e8c4315c47"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "solaris" || hostPlatform.parsed.kernel.name == "illumos" || hostPlatform.parsed.kernel.name == "fuchsia" || hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "cloudabi" || hostPlatform.parsed.kernel.name == "haiku" || hostPlatform.parsed.kernel.name == "vxworks" || hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "wasi" then "getrandom" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.7" { inherit profileName; };
      ${ if !((hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && hostPlatform.parsed.kernel.name == "none") then "once_cell" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.12.0" { inherit profileName; };
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.18" = overridableMkRustCrate (profileName: rec {
    name = "aho-corasick";
    version = "0.7.18";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1e37cfd5e7657ada45f742d6e99ca5788580b5c529dc78faf11ece6dc702656f"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "memchr" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.58" = overridableMkRustCrate (profileName: rec {
    name = "anyhow";
    version = "1.0.58";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bb07d2053ccdbe10e2af2995a2f116c1330396493dc1269f6a91d0ae82e19704"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.6" = overridableMkRustCrate (profileName: rec {
    name = "arrayref";
    version = "0.3.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a4c527152e37cf757a3f78aae5a06fbeefdb07ccc535c980a3208ee3060dd544"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.4.12" = overridableMkRustCrate (profileName: rec {
    name = "arrayvec";
    version = "0.4.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cd9fd44efafa8690358b7408d253adf110036b88f55672a933f01d616ad9b1b9"; };
    dependencies = {
      nodrop = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nodrop."0.1.14" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "arrayvec";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8da52d66c7071e2e3fa2a1e5c6d088fec47b593032b254f5e980de8ea54454d6"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".assert_matches."1.5.0" = overridableMkRustCrate (profileName: rec {
    name = "assert_matches";
    version = "1.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9b34d609dfbaf33d6889b2b7106d3ca345eacad44200913df5ba02bfd31d2ba9"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" = overridableMkRustCrate (profileName: rec {
    name = "atty";
    version = "0.2.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.19" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "autocfg";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.65" = overridableMkRustCrate (profileName: rec {
    name = "backtrace";
    version = "0.3.65";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "11a17d453482a265fd5f8479f2a3f405566e6ca627837aaddb85af8b1ab8ef61"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      addr2line = rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr2line."0.17.0" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      miniz_oxide = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.5.3" { inherit profileName; };
      object = rustPackages."registry+https://github.com/rust-lang/crates.io-index".object."0.28.4" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.21" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.73" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.2" = overridableMkRustCrate (profileName: rec {
    name = "bit-set";
    version = "0.5.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6e11e16035ea35e4e5997b393eacbf6f63983188f7a2ad25bfb13465f5ad59de"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      bit_vec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.3" = overridableMkRustCrate (profileName: rec {
    name = "bit-vec";
    version = "0.6.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "1.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitvec."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "bitvec";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1489fcb93a5bb47da0462ca93ad252ad6af2145cce58d10d46a83931ba9f016b"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "atomic" ]
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      funty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".funty."2.0.0" { inherit profileName; };
      radium = rustPackages."registry+https://github.com/rust-lang/crates.io-index".radium."0.7.0" { inherit profileName; };
      tap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" { inherit profileName; };
      wyz = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wyz."0.5.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".blake2b_simd."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "blake2b_simd";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "72936ee4afc7f8f736d1c38383b56480b5497b4617b4a77bdbf1d2ababc76127"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      arrayref = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.6" { inherit profileName; };
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.2" { inherit profileName; };
      constant_time_eq = rustPackages."registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bstr."0.2.17" = overridableMkRustCrate (profileName: rec {
    name = "bstr";
    version = "0.2.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ba3569f383e8f1598449f1a423e72e99569137b47740b1da11ef19af3d5c3223"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "lazy_static" ]
      [ "regex-automata" ]
      [ "serde" ]
      [ "serde1" ]
      [ "serde1-nostd" ]
      [ "std" ]
      [ "unicode" ]
    ];
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
      regex_automata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.137" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.10.0" = overridableMkRustCrate (profileName: rec {
    name = "bumpalo";
    version = "3.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "37ccbd214614c6783386c1af30caf03192f17891059cecc394b4fb119e363de3"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.9.1" = overridableMkRustCrate (profileName: rec {
    name = "bytemuck";
    version = "1.9.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cdead85bdec19c194affaeeb670c0e41fe23de31459efd1c174d049269cf02cc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" = overridableMkRustCrate (profileName: rec {
    name = "byteorder";
    version = "1.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cast."0.2.7" = overridableMkRustCrate (profileName: rec {
    name = "cast";
    version = "0.2.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4c24dab4283a142afa2fdca129b80ad2c6284e073930f964c3a1293c225ee39a"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.73" = overridableMkRustCrate (profileName: rec {
    name = "cc";
    version = "1.0.73";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2fff2a6927b3bb87f9595d67196a70493f627687a71d87a0d692242c33f58c11"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "cfg-if";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.19" = overridableMkRustCrate (profileName: rec {
    name = "chrono";
    version = "0.4.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "670ad68c9088c2a963aaa298cb369688cf3f9465ce5e2d4ca10e6e0098a1ce73"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "clock")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "libc")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "oldtime")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "std")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "time")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "winapi")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "num_integer" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "num_traits" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "time" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.44" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".clap."2.34.0" = overridableMkRustCrate (profileName: rec {
    name = "clap";
    version = "2.34.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a0610544180c38b88101fecf2dd634b174a62eef6946f84dfc6a7127512b381c"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
      textwrap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".textwrap."0.11.0" { inherit profileName; };
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.48" = overridableMkRustCrate (profileName: rec {
    name = "cmake";
    version = "0.1.48";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e8ad8cef104ac57b68b89df3208164d228503abbdce70f6880ffa3d970e7443a"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "cc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.73" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".color_quant."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "color_quant";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3d7b894f5411737b7867f4827955924d7c254fc9f4d91a6aad6b097804b1018b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "constant_time_eq";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "245097e9a4535ee1e3e3931fcfcd55a796a44c643e8596ff6566d68f09b87bbc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.3" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation";
    version = "0.9.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "194a7a9e6de53fa55116934067c844d9d749312f75c6f6d0980e8c252f8c2146"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "core_foundation_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.3" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.3" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation-sys";
    version = "0.8.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5827cebf4670468b8772dd191856768aedcb1b0278a04f989f7766351917b9dc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-graphics."0.22.3" = overridableMkRustCrate (profileName: rec {
    name = "core-graphics";
    version = "0.22.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2581bbab3b8ffc6fcbd550bf46c355135d16e9ff2a6ea032ad6b9bf1d7efe4fb"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "bitflags" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "core_foundation" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.3" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "core_graphics_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-graphics-types."0.1.1" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "foreign_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-graphics-types."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "core-graphics-types";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3a68b68b3446082644c91ac778bf50cd4104bfb002b5a6a7c44cca5a2c70788b"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "bitflags" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "core_foundation" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.3" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "foreign_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-text."19.2.0" = overridableMkRustCrate (profileName: rec {
    name = "core-text";
    version = "19.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "99d74ada66e07c1cefa18f8abfba765b486f250de2e4a999e5727fc0dd4b4a25"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "mountainlion")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "core_foundation" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.3" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "core_graphics" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-graphics."0.22.3" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "foreign_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cpp_demangle."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "cpp_demangle";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "eeaa953eaad386a53111e47172c2fedba671e5684c8dd601a5f474f4f118710f"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" = overridableMkRustCrate (profileName: rec {
    name = "crc32fast";
    version = "1.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b540bd8bc810d3885c6ea91e2018302f68baba2129ab3e88f32389ee9370880d"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".criterion."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "criterion";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1604dafd25fba2fe2d5895a9da139f8dc9b319a5fe5354ca137cbbce4e178d10"; };
    features = builtins.concatLists [
      [ "cargo_bench_support" ]
      [ "default" ]
    ];
    dependencies = {
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      cast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cast."0.2.7" { inherit profileName; };
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.34.0" { inherit profileName; };
      criterion_plot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion-plot."0.4.4" { inherit profileName; };
      csv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".csv."1.1.6" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.3" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
      oorandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".oorandom."11.1.3" { inherit profileName; };
      plotters = rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters."0.3.1" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.5.3" { inherit profileName; };
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.5.6" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.137" { inherit profileName; };
      serde_cbor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_cbor."0.11.2" { inherit profileName; };
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.137" { profileName = "__noProfile"; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.81" { inherit profileName; };
      tinytemplate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinytemplate."1.2.1" { inherit profileName; };
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".criterion-plot."0.4.4" = overridableMkRustCrate (profileName: rec {
    name = "criterion-plot";
    version = "0.4.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d00996de9f2f7559f7f4dc286073197f83e92256a59ed395f9aac01fe717da57"; };
    dependencies = {
      cast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cast."0.2.7" { inherit profileName; };
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.5" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-channel";
    version = "0.5.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4c02a4d71819009c192cf4872265391563fd6a84c81ff2c0f2a7026ca4c1d85c"; };
    features = builtins.concatLists [
      [ "crossbeam-utils" ]
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.1" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-deque";
    version = "0.8.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6455c0ca19f0d2fbf751b908d5c55c1f5cbc65e03c4225427254b46890bdde1e"; };
    features = builtins.concatLists [
      [ "crossbeam-epoch" ]
      [ "crossbeam-utils" ]
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      crossbeam_epoch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.9.9" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.9.9" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-epoch";
    version = "0.9.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "07db9d94cbd326813772c968ccd25999e5f8ae22f4f8d1b11effa37ef6ce281d"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "once_cell" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.9" { inherit profileName; };
      memoffset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.6.5" { inherit profileName; };
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.12.0" { inherit profileName; };
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.9" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.8.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8ff1f980957787286a554052d03c7aee98d99cc32e09f6d45f0a814133c87978"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "once_cell" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.12.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "crunchy";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".csv."1.1.6" = overridableMkRustCrate (profileName: rec {
    name = "csv";
    version = "1.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "22813a6dc45b335f9bade10bf7271dc477e81113e89eb251a0bc2a8a81c536e1"; };
    dependencies = {
      bstr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bstr."0.2.17" { inherit profileName; };
      csv_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".csv-core."0.1.10" { inherit profileName; };
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.8" { inherit profileName; };
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.10" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.137" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".csv-core."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "csv-core";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2b2466559f260f48ad25fe6317b3c8dac77b5bdb5763ac7d9d6103530663bc90"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".darling."0.10.2" = overridableMkRustCrate (profileName: rec {
    name = "darling";
    version = "0.10.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0d706e75d87e35569db781a9b5e2416cff1236a47ed380831f959382ccd5f858"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "suggestions")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "darling_core" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_core."0.10.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "darling_macro" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_macro."0.10.2" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".darling_core."0.10.2" = overridableMkRustCrate (profileName: rec {
    name = "darling_core";
    version = "0.10.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f0c960ae2da4de88a91b2d920c2a7233b400bc33cb28453a2987822d8392519b"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "strsim")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "suggestions")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "fnv" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "ident_case" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ident_case."1.0.1" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "proc_macro2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "quote" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "strsim" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.9.3" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "syn" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.98" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".darling_macro."0.10.2" = overridableMkRustCrate (profileName: rec {
    name = "darling_macro";
    version = "0.10.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d9b5a2f4ac4969822c62224815d069952656cadc7084fdca9751e6d959189b72"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "darling_core" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_core."0.10.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "quote" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "syn" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.98" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".debugid."0.7.3" = overridableMkRustCrate (profileName: rec {
    name = "debugid";
    version = "0.7.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d6ee87af31d84ef885378aebca32be3d682b0e0dc119d5b4860a2c5bb5046730"; };
    dependencies = {
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."0.8.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".deflate."0.8.6" = overridableMkRustCrate (profileName: rec {
    name = "deflate";
    version = "0.8.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "73770f8e1fe7d64df17ca66ad28994a0a623ea497fa69486e14984e715c5d174"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "adler32" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler32."1.2.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "byteorder" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".derive_builder."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "derive_builder";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a2658621297f2cf68762a6f7dc0bb7e1ff2cfd6583daef8ee0fed6f7ec468ec0"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "darling" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling."0.10.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "derive_builder_core" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_builder_core."0.9.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "proc_macro2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "quote" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "syn" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.98" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".derive_builder_core."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "derive_builder_core";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2791ea3e372c8495c0bc2033991d76b512cd799d07491fbd6890124db9458bef"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "darling" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling."0.10.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "proc_macro2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "quote" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "syn" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.98" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dirs-next."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "dirs-next";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "dirs_sys_next" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys-next."0.1.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dirs-sys-next."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "dirs-sys-next";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d"; };
    dependencies = {
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && hostPlatform.parsed.kernel.name == "redox" then "redox_users" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_users."0.4.3" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dwrote."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "dwrote";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "439a1c2ba5611ad3ed731280541d36d2e9c4ac5e7fb818a27b604bdc5a6aa65b"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "wio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wio."0.2.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".either."1.6.1" = overridableMkRustCrate (profileName: rec {
    name = "either";
    version = "1.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e78d4f1cc4ae33bbfc157ed5d5a5ef3bc29227303d595861deb238fcec4e9457"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".expat-sys."2.1.6" = overridableMkRustCrate (profileName: rec {
    name = "expat-sys";
    version = "2.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "658f19728920138342f68408b7cf7644d90d4784353d8ebc32e7e8663dbe45fa"; };
    buildDependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "cmake" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.48" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "pkg_config" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.25" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fastrand."1.7.0" = overridableMkRustCrate (profileName: rec {
    name = "fastrand";
    version = "1.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c3fcf0cee53519c866c09b5de1f6c56ff9d647101f81c1964fa632e148896cdf"; };
    dependencies = {
      ${ if hostPlatform.parsed.cpu.name == "wasm32" then "instant" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.12" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ff."0.12.0" = overridableMkRustCrate (profileName: rec {
    name = "ff";
    version = "0.12.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "df689201f395c6b90dfe87127685f8dbfc083a5e779e613575d8bd7314300c3e"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "bits" ]
      [ "bitvec" ]
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      bitvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitvec."1.0.0" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.3" { inherit profileName; };
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.4.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".findshlibs."0.10.2" = overridableMkRustCrate (profileName: rec {
    name = "findshlibs";
    version = "0.10.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "40b9e59cd0f7e0806cca4be089683ecb6434e602038df21fe6bf6711b2f07f64"; };
    dependencies = {
      ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.73" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".float-ord."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "float-ord";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7bad48618fdb549078c333a7a8528acb57af271d0433bdecd523eb620628364e"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" = overridableMkRustCrate (profileName: rec {
    name = "fnv";
    version = "1.0.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".font-kit."0.10.1" = overridableMkRustCrate (profileName: rec {
    name = "font-kit";
    version = "0.10.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "46c9a156ec38864999bc9c4156e5f3b50224d4a5578028a64e5a3875caa9ee28"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "source")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "bitflags" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "byteorder" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && (hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "core_foundation" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.3" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && (hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "core_graphics" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-graphics."0.22.3" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && (hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "core_text" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-text."19.2.0" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && !(hostPlatform.parsed.cpu.name == "wasm32" || hostPlatform.isWindows || hostPlatform.parsed.kernel.name == "android") then "dirs_next" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-next."2.0.0" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && hostPlatform.isWindows then "dwrote" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dwrote."0.11.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "float_ord" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".float-ord."0.2.0" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && !(hostPlatform.isWindows || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "freetype" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".freetype."0.7.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "pathfinder_geometry" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pathfinder_geometry."0.5.1" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "pathfinder_simd" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pathfinder_simd."0.5.1" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && !(hostPlatform.isWindows || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.cpu.name == "wasm32") then "fontconfig" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".servo-fontconfig."0.5.1" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && !(hostPlatform.parsed.cpu.name == "wasm32") then "walkdir" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.2" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "foreign-types";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "foreign_types_shared" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "foreign-types-shared";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".freetype."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "freetype";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bee38378a9e3db1cc693b4f88d166ae375338a0ff75cb8263e1c601d51f35dc6"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "freetype-sys")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "freetype_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".freetype-sys."0.13.1" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".freetype-sys."0.13.1" = overridableMkRustCrate (profileName: rec {
    name = "freetype-sys";
    version = "0.13.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a37d4011c0cc628dfa766fcc195454f4b068d7afdc2adfd28861191d866e731a"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "cmake" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.48" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "pkg_config" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.25" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".funty."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "funty";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e6d5a32815ae3f33302d95fdcb2ce17862f8c65363dcfd29360480ba1001fc9c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.7" = overridableMkRustCrate (profileName: rec {
    name = "getrandom";
    version = "0.2.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4eb1a864a501629691edf6c15a593b7a51eebaa1e8468e9ddc623de7c9b58ec6"; };
    features = builtins.concatLists [
      [ "js" ]
      [ "js-sys" ]
      [ "std" ]
      [ "wasm-bindgen" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "js_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.58" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" { inherit profileName; };
      ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "wasm_bindgen" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.81" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".gif."0.11.3" = overridableMkRustCrate (profileName: rec {
    name = "gif";
    version = "0.11.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c3a7187e78088aead22ceedeee99779455b23fc231fe13ec443f99bb71694e5b"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "raii_no_panic")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "color_quant" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".color_quant."1.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "weezl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".weezl."0.1.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".gimli."0.26.1" = overridableMkRustCrate (profileName: rec {
    name = "gimli";
    version = "0.26.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "78cc372d058dcf6d5ecd98510e7fbc9e5aec4d21de70f65fea8fecebcd881bd4"; };
    features = builtins.concatLists [
      [ "read" ]
      [ "read-core" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".group."0.12.0" = overridableMkRustCrate (profileName: rec {
    name = "group";
    version = "0.12.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7391856def869c1c81063a03457c676fbcd419709c3dfb33d8d319de484b154d"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "byteorder" ]
      [ "default" ]
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" { inherit profileName; };
      ff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ff."0.12.0" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.3" { inherit profileName; };
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.4.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".gumdrop."0.8.1" = overridableMkRustCrate (profileName: rec {
    name = "gumdrop";
    version = "0.8.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5bc700f989d2f6f0248546222d9b4258f5b02a171a431f8285a81c08142629e3"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      gumdrop_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".gumdrop_derive."0.8.1" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".gumdrop_derive."0.8.1" = overridableMkRustCrate (profileName: rec {
    name = "gumdrop_derive";
    version = "0.8.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "729f9bd3449d77e7831a18abfb7ba2f99ee813dfd15b8c2167c9a54ba20aa99d"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.98" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".half."1.8.2" = overridableMkRustCrate (profileName: rec {
    name = "half";
    version = "1.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "eabb4a44450da02c90444cf74558da904edde8fb4e9035a9a6a4e15445af0bd7"; };
  });
  
  "unknown".halo2."0.1.0-beta.2" = overridableMkRustCrate (profileName: rec {
    name = "halo2";
    version = "0.1.0-beta.2";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/halo2");
    dependencies = {
      halo2_proofs = rustPackages."unknown".halo2_proofs."0.1.0" { inherit profileName; };
    };
  });
  
  "unknown".halo2_gadgets."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "halo2_gadgets";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/halo2_gadgets");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph") "dev-graph")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters") "plotters")
      (lib.optional (rootFeatures' ? "halo2_gadgets/proptest" || rootFeatures' ? "halo2_gadgets/test-dependencies") "proptest")
      (lib.optional (rootFeatures' ? "halo2_gadgets/test-dependencies") "test-dependencies")
      (lib.optional (rootFeatures' ? "halo2_gadgets/unstable") "unstable")
    ];
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.2" { inherit profileName; };
      bitvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitvec."1.0.0" { inherit profileName; };
      ff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ff."0.12.0" { inherit profileName; };
      group = rustPackages."registry+https://github.com/rust-lang/crates.io-index".group."0.12.0" { inherit profileName; };
      halo2_proofs = rustPackages."unknown".halo2_proofs."0.1.0" { inherit profileName; };
      halo2curves = rustPackages."git+https://github.com/privacy-scaling-explorations/halo2curves".halo2curves."0.2.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" then "plotters" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters."0.3.1" { inherit profileName; };
      proptest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proptest."1.0.0" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.4.1" { inherit profileName; };
      uint = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uint."0.9.3" { inherit profileName; };
    };
    devDependencies = {
      criterion = rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.3.5" { inherit profileName; };
      ${ if hostPlatform.isUnix then "pprof" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pprof."0.8.0" { inherit profileName; };
      proptest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proptest."1.0.0" { inherit profileName; };
    };
  });
  
  "unknown".halo2_proofs."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "halo2_proofs";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/halo2_proofs");
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_proofs/backtrace" || rootFeatures' ? "halo2_proofs/gadget-traces") "backtrace")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph") "dev-graph")
      (lib.optional (rootFeatures' ? "halo2_proofs/gadget-traces") "gadget-traces")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "plotters")
      (lib.optional (rootFeatures' ? "halo2_proofs/sanity-checks") "sanity-checks")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "tabbycat")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_proofs/backtrace" || rootFeatures' ? "halo2_proofs/gadget-traces" then "backtrace" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.65" { inherit profileName; };
      blake2b_simd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".blake2b_simd."1.0.0" { inherit profileName; };
      ff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ff."0.12.0" { inherit profileName; };
      group = rustPackages."registry+https://github.com/rust-lang/crates.io-index".group."0.12.0" { inherit profileName; };
      halo2curves = rustPackages."git+https://github.com/privacy-scaling-explorations/halo2curves".halo2curves."0.2.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "plotters" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters."0.3.1" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.3" { inherit profileName; };
      rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.5.3" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "tabbycat" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tabbycat."0.1.2" { inherit profileName; };
    };
    devDependencies = {
      assert_matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".assert_matches."1.5.0" { inherit profileName; };
      criterion = rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.3.5" { inherit profileName; };
      ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "getrandom" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.7" { inherit profileName; };
      gumdrop = rustPackages."registry+https://github.com/rust-lang/crates.io-index".gumdrop."0.8.1" { inherit profileName; };
      proptest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proptest."1.0.0" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.3" { inherit profileName; };
    };
  });
  
  "git+https://github.com/privacy-scaling-explorations/halo2curves".halo2curves."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "halo2curves";
    version = "0.2.0";
    registry = "git+https://github.com/privacy-scaling-explorations/halo2curves";
    src = fetchCrateGit {
      url = https://github.com/privacy-scaling-explorations/halo2curves;
      name = "halo2curves";
      version = "0.2.0";
      rev = "bbd4cee10dbf9c51e0456ea67ec2b894b49f688c";};
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      ff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ff."0.12.0" { inherit profileName; };
      group = rustPackages."registry+https://github.com/rust-lang/crates.io-index".group."0.12.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_bigint = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.3" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
      pasta_curves = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pasta_curves."0.4.0" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.3" { inherit profileName; };
      static_assertions = rustPackages."registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" { inherit profileName; };
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.4.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "hashbrown";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "db0d4cf898abf0081f964436dc980e96670a0f36863e4b83aaacdb65c9d7ccc3"; };
    features = builtins.concatLists [
      [ "raw" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.19" = overridableMkRustCrate (profileName: rec {
    name = "hermit-abi";
    version = "0.1.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "hex";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ident_case."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "ident_case";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".image."0.23.14" = overridableMkRustCrate (profileName: rec {
    name = "image";
    version = "0.23.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "24ffcb7e7244a9bf19d35bf2883b9c080c4ced3c07a9895572178cdb8f13f6a1"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "bmp")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "jpeg")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "png")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "bytemuck" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.9.1" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "byteorder" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "color_quant" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".color_quant."1.1.0" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "jpeg" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jpeg-decoder."0.1.22" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "num_iter" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-iter."0.1.43" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "num_rational" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-rational."0.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "num_traits" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "png" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".png."0.16.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.0" = overridableMkRustCrate (profileName: rec {
    name = "indexmap";
    version = "1.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6c6392766afd7964e2531940894cffe4bd8d7d17dbc3c1c4857040fd4b33bdb3"; };
    dependencies = {
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.1" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".inferno."0.11.5" = overridableMkRustCrate (profileName: rec {
    name = "inferno";
    version = "0.11.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "244ae9456c246081801028c893ee0e2b71be4f0380894e2cd53974c3beea0c64"; };
    features = builtins.concatLists [
      [ "indexmap" ]
      [ "nameattr" ]
    ];
    dependencies = {
      ahash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.6" { inherit profileName; };
      atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.0" { inherit profileName; };
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.2" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
      num_format = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-format."0.4.0" { inherit profileName; };
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.12.0" { inherit profileName; };
      quick_xml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-xml."0.23.0" { inherit profileName; };
      rgb = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rgb."0.8.33" { inherit profileName; };
      str_stack = rustPackages."registry+https://github.com/rust-lang/crates.io-index".str_stack."0.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".instant."0.1.12" = overridableMkRustCrate (profileName: rec {
    name = "instant";
    version = "0.1.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.3" = overridableMkRustCrate (profileName: rec {
    name = "itertools";
    version = "0.10.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a9a9d19fa1e79b6215ff29b9d6880b706147f16e9b1dbb1e4e5947b5b02bc5e3"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "use_alloc" ]
      [ "use_std" ]
    ];
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.8" = overridableMkRustCrate (profileName: rec {
    name = "itoa";
    version = "0.4.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b71991ff56294aa922b450139ee08b3bfc70982c6b2c7562771375cf73542dd4"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "i128" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "itoa";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "112c678d4050afce233f4f2852bb2eb519230b3cf12f33585275537d7e41578d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jpeg-decoder."0.1.22" = overridableMkRustCrate (profileName: rec {
    name = "jpeg-decoder";
    version = "0.1.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "229d53d58899083193af11e15917b5640cd40b29ff475a1fe4ef725deb02d0f2"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.58" = overridableMkRustCrate (profileName: rec {
    name = "js-sys";
    version = "0.3.58";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c3fac17f7123a73ca62df411b1bf727ccc805daa070338fda671c86dac1bdc27"; };
    dependencies = {
      wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.81" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" = overridableMkRustCrate (profileName: rec {
    name = "lazy_static";
    version = "1.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" = overridableMkRustCrate (profileName: rec {
    name = "libc";
    version = "0.2.126";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "349d5a591cd28b49e1d1037471617a32ddcda5731b99419008085f72d5a53836"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "extra_traits" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.7" = overridableMkRustCrate (profileName: rec {
    name = "lock_api";
    version = "0.4.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "327fa5b6a6940e4699ec49a9beae1ea4845c6bab9314e4f84ac68742139d8c53"; };
    dependencies = {
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" = overridableMkRustCrate (profileName: rec {
    name = "log";
    version = "0.4.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "abb12e687cfb44aa40f41fc3978ef76448f9b6038cad6aef4259d3c095a2382e"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" = overridableMkRustCrate (profileName: rec {
    name = "memchr";
    version = "2.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memmap2."0.5.4" = overridableMkRustCrate (profileName: rec {
    name = "memmap2";
    version = "0.5.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d5172b50c23043ff43dd53e51392f36519d9b35a8f3a410d30ece5d1aedd58ae"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memoffset."0.6.5" = overridableMkRustCrate (profileName: rec {
    name = "memoffset";
    version = "0.6.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5aa361d4faea93603064a027415f07bd8e1d5c88c9fbf68bf56a285428fd79ce"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.3.7" = overridableMkRustCrate (profileName: rec {
    name = "miniz_oxide";
    version = "0.3.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "791daaae1ed6889560f8c4359194f56648355540573244a5448a83ba1ecc7435"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "adler32" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler32."1.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.5.3" = overridableMkRustCrate (profileName: rec {
    name = "miniz_oxide";
    version = "0.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6f5c75688da582b8ffc1f1799e9db273f32133c49e048f614d22ec3256773ccc"; };
    dependencies = {
      adler = rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler."1.0.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".nix."0.23.1" = overridableMkRustCrate (profileName: rec {
    name = "nix";
    version = "0.23.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9f866317acbd3a240710c63f065ffb1e4fd466259045ccb504130b7f668f35c6"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if !(hostPlatform.parsed.kernel.name == "redox") then "memoffset" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.6.5" { inherit profileName; };
    };
    buildDependencies = {
      ${ if hostPlatform.parsed.kernel.name == "dragonfly" then "cc" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.73" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".nodrop."0.1.14" = overridableMkRustCrate (profileName: rec {
    name = "nodrop";
    version = "0.1.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "72ef4a56884ca558e5ddb05a1d1e7e1bfd9a68d9ed024c21704cc98872dae1bb"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "num-bigint";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f93ab6289c7b344a8a9f60f88d80aa20032336fe78da341afc91c8a2341fc75f"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-format."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "num-format";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bafe4179722c2894288ee77a9f044f02811c86af699344c498b0840c698a2465"; };
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.4.12" { inherit profileName; };
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.8" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" = overridableMkRustCrate (profileName: rec {
    name = "num-integer";
    version = "0.1.45";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "225d3389fb3509a24c93f5c29eb6bde2586b98d9f016636dff58d7c6f7569cd9"; };
    features = builtins.concatLists [
      [ "i128" ]
      [ "std" ]
    ];
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-iter."0.1.43" = overridableMkRustCrate (profileName: rec {
    name = "num-iter";
    version = "0.1.43";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7d03e6c028c5dc5cac6e2dec0efda81fc887605bb3d884578bb6d6bf7514e252"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "num_integer" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "num_traits" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "autocfg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-rational."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "num-rational";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "12ac428b1cb17fce6f731001d307d351ec70a6d202fc2e60f7d4c5e42d8f4f07"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "num_integer" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "num_traits" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "autocfg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" = overridableMkRustCrate (profileName: rec {
    name = "num-traits";
    version = "0.2.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "578ede34cf02f8924ab9447f50c28075b4d3e5b269972345e7e0372b38c6cdcd"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "i128" ]
      [ "std" ]
    ];
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.1" = overridableMkRustCrate (profileName: rec {
    name = "num_cpus";
    version = "1.13.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "19e64526ebdee182341572e50e9ad03965aa510cd94427a4549448f285e957a1"; };
    dependencies = {
      ${ if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "aarch64") && hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.19" { inherit profileName; };
      ${ if !hostPlatform.isWindows then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".object."0.28.4" = overridableMkRustCrate (profileName: rec {
    name = "object";
    version = "0.28.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e42c982f2d955fac81dd7e1d0e1426a7d702acd9c98d19ab01083a6a0328c424"; };
    features = builtins.concatLists [
      [ "archive" ]
      [ "coff" ]
      [ "elf" ]
      [ "macho" ]
      [ "pe" ]
      [ "read_core" ]
      [ "unaligned" ]
    ];
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.12.0" = overridableMkRustCrate (profileName: rec {
    name = "once_cell";
    version = "1.12.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7709cef83f0c1f58f666e746a08b21e0085f7440fa6a29cc194d68aac97a4225"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "race" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".oorandom."11.1.3" = overridableMkRustCrate (profileName: rec {
    name = "oorandom";
    version = "11.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.7" { inherit profileName; };
      parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.3" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot_core";
    version = "0.9.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "09a279cbf25cb0757810394fbc1e359949b59e348145c643a939a525692e6929"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.2.13" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.8.0" { inherit profileName; };
      ${ if hostPlatform.isWindows then "windows_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.36.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pasta_curves."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "pasta_curves";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "369d7785168ad7ff0cbe467d968ca3e19a927d8536b11ef9c21b4e454b15ba42"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "bits" ]
      [ "blake2b_simd" ]
      [ "default" ]
      [ "lazy_static" ]
      [ "sqrt-table" ]
    ];
    dependencies = {
      blake2b_simd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".blake2b_simd."1.0.0" { inherit profileName; };
      ff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ff."0.12.0" { inherit profileName; };
      group = rustPackages."registry+https://github.com/rust-lang/crates.io-index".group."0.12.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
      static_assertions = rustPackages."registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" { inherit profileName; };
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.4.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pathfinder_geometry."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "pathfinder_geometry";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0b7b7e7b4ea703700ce73ebf128e1450eb69c3a8329199ffbfb9b2a0418e5ad3"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "pathfinder_simd" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pathfinder_simd."0.5.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pathfinder_simd."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "pathfinder_simd";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "39fe46acc5503595e5949c17b818714d26fdf9b4920eacf3b2947f0199f4a6ff"; };
    buildDependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "rustc_version" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.3.3" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pest."2.1.3" = overridableMkRustCrate (profileName: rec {
    name = "pest";
    version = "2.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "10f4872ae94d7b90ae48754df22fd42ad52ce740b8f370b03da4835417403e53"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "ucd_trie" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ucd-trie."0.1.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.25" = overridableMkRustCrate (profileName: rec {
    name = "pkg-config";
    version = "0.3.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1df8c4ec4b0627e53bdf214615ad287367e482558cf84b109250b37464dc03ae"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".plotters."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "plotters";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "32a3fd9ec30b9749ce28cd91f255d569591cdf937fe280c312143e3c4bad6f2a"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "all_elements")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "all_series")
      [ "area_series" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "bitmap_backend")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "bitmap_encoder")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "bitmap_gif")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "boxplot")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "candlestick")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "chrono")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "deprecated_items")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "errorbar")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "font-kit")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "histogram")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "image")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "lazy_static")
      [ "line_series" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "pathfinder_geometry")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "plotters-bitmap")
      [ "plotters-svg" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "point_series")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "surface_series")
      [ "svg_backend" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "ttf")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "ttf-parser")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "chrono" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.19" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && !(hostPlatform.parsed.cpu.name == "wasm32") then "font_kit" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".font-kit."0.10.1" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && !(hostPlatform.parsed.cpu.name == "wasm32") then "image" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".image."0.23.14" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && !(hostPlatform.parsed.cpu.name == "wasm32") then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && !(hostPlatform.parsed.cpu.name == "wasm32") then "pathfinder_geometry" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pathfinder_geometry."0.5.1" { inherit profileName; };
      plotters_backend = rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-backend."0.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "plotters_bitmap" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-bitmap."0.3.1" { inherit profileName; };
      plotters_svg = rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-svg."0.3.1" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && !(hostPlatform.parsed.cpu.name == "wasm32") then "ttf_parser" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ttf-parser."0.12.3" { inherit profileName; };
      ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.81" { inherit profileName; };
      ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.58" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".plotters-backend."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "plotters-backend";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d88417318da0eaf0fdcdb51a0ee6c3bed624333bff8f946733049380be67ac1c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".plotters-bitmap."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "plotters-bitmap";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "21362fa905695e5618aefd169358f52e0e8bc4a8e05333cf780fda8cddc00b54"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "gif")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "gif_backend")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "image")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "image_encoder")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "gif" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".gif."0.11.3" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && !(hostPlatform.parsed.cpu.name == "wasm32") then "image" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".image."0.23.14" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "plotters_backend" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-backend."0.3.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".plotters-svg."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "plotters-svg";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "521fa9638fa597e1dc53e9412a4f9cefb01187ee1f7413076f9e6749e2885ba9"; };
    dependencies = {
      plotters_backend = rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-backend."0.3.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".png."0.16.8" = overridableMkRustCrate (profileName: rec {
    name = "png";
    version = "0.16.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3c3287920cb847dee3de33d301c463fba14dda99db24214ddf93f83d3021f4c6"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "deflate")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "png-encoding")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "bitflags" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "crc32fast" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "deflate" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".deflate."0.8.6" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "miniz_oxide" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.3.7" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pprof."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "pprof";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f2324292407eab69d4ace0eed1524fe612ac37c98aa22b0d868355b17fada530"; };
    features = builtins.concatLists [
      [ "cpp" ]
      [ "criterion" ]
      [ "default" ]
      [ "flamegraph" ]
      [ "inferno" ]
    ];
    dependencies = {
      backtrace = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.65" { inherit profileName; };
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      criterion = rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.3.5" { inherit profileName; };
      findshlibs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".findshlibs."0.10.2" { inherit profileName; };
      inferno = rustPackages."registry+https://github.com/rust-lang/crates.io-index".inferno."0.11.5" { inherit profileName; };
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
      nix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nix."0.23.1" { inherit profileName; };
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.12.0" { inherit profileName; };
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" { inherit profileName; };
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.8.0" { inherit profileName; };
      symbolic_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".symbolic-demangle."8.8.0" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.3.0" { inherit profileName; };
      thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.31" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.16" = overridableMkRustCrate (profileName: rec {
    name = "ppv-lite86";
    version = "0.2.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "eb9f9e6e233e5c4a35559a617bf40a4ec447db2e84c20b55a6f83167b7e57872"; };
    features = builtins.concatLists [
      [ "simd" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro2";
    version = "1.0.40";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dd96a1e8ed2596c337f8eae5f24924ec83f5ad5ab21ea8e455d3566c69fbcaf7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proptest."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "proptest";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1e0d9cc07f18492d879586c92b485def06bc850da3118075cd45d50e9c95b0e5"; };
    features = builtins.concatLists [
      [ "bit-set" ]
      [ "break-dead-code" ]
      [ "default" ]
      [ "fork" ]
      [ "lazy_static" ]
      [ "quick-error" ]
      [ "regex-syntax" ]
      [ "rusty-fork" ]
      [ "std" ]
      [ "tempfile" ]
      [ "timeout" ]
    ];
    dependencies = {
      bit_set = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.2" { inherit profileName; };
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
      quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."2.0.1" { inherit profileName; };
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
      rand_chacha = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" { inherit profileName; };
      rand_xorshift = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.3.0" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.26" { inherit profileName; };
      rusty_fork = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rusty-fork."0.3.0" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.3.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" = overridableMkRustCrate (profileName: rec {
    name = "quick-error";
    version = "1.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quick-error."2.0.1" = overridableMkRustCrate (profileName: rec {
    name = "quick-error";
    version = "2.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a993555f31e5a609f617c12db6250dedcac1b0a85076912c436e6fc9b2c8e6a3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quick-xml."0.23.0" = overridableMkRustCrate (profileName: rec {
    name = "quick-xml";
    version = "0.23.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9279fbdacaad3baf559d8cabe0acc3d06e30ea14931af31af79578ac0946decc"; };
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "1.0.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3bcdf212e9776fbcb2d23ab029360416bb1706b1aea2d1a5ba002727cbcab804"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".radium."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "radium";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dc33ff2d4973d518d823d61aa239014831e521c75da58e3df4840d3f47749d09"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" = overridableMkRustCrate (profileName: rec {
    name = "rand";
    version = "0.8.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "getrandom" ]
      [ "libc" ]
      [ "rand_chacha" ]
      [ "std" ]
      [ "std_rng" ]
    ];
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      rand_chacha = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "rand_chacha";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      ppv_lite86 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.16" { inherit profileName; };
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.3" = overridableMkRustCrate (profileName: rec {
    name = "rand_core";
    version = "0.6.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d34f1408f55294453790c48b2f1ebbb1c5b4b7563eb1f418bcfcfdbb06ebb4e7"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "getrandom" ]
      [ "std" ]
    ];
    dependencies = {
      getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.7" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_xorshift";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d25bf25ec5ae4a3f1b92f929810509a2f53d7dca2f50b794ff57e3face536c8f"; };
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rayon."1.5.3" = overridableMkRustCrate (profileName: rec {
    name = "rayon";
    version = "1.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bd99e5772ead8baa5215278c9b15bf92087709e9c1b2d1f97cdb5a183c933a7d"; };
    dependencies = {
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.1" { inherit profileName; };
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.1" { inherit profileName; };
      rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.9.3" { inherit profileName; };
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.9.3" = overridableMkRustCrate (profileName: rec {
    name = "rayon-core";
    version = "1.9.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "258bcdb5ac6dad48491bb2992db6b7cf74878b0384908af124823d118c99683f"; };
    dependencies = {
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.5" { inherit profileName; };
      crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.1" { inherit profileName; };
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.9" { inherit profileName; };
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.2.13" = overridableMkRustCrate (profileName: rec {
    name = "redox_syscall";
    version = "0.2.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "62f25bc4c7e55e0b0b7a1d43fb893f4fa1361d0abe38b9ce4f323c2adfe6ef42"; };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".redox_users."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "redox_users";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b033d837a7cf162d7993aded9304e30a83213c648b6e389db233191f891e5c2b"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "getrandom" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.7" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.2.13" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "thiserror" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.31" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex."1.5.6" = overridableMkRustCrate (profileName: rec {
    name = "regex";
    version = "1.5.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d83f127d94bdbcda4c8cc2e50f6f84f4b611f69c902699ca385a39c3a75f9ff1"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "aho-corasick")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "memchr")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "perf")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "perf-cache")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "perf-dfa")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "perf-inline")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "perf-literal")
      [ "std" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "unicode")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "unicode-age")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "unicode-bool")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "unicode-case")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "unicode-gencat")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "unicode-perl")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "unicode-script")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "unicode-segment")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "aho_corasick" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.18" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "memchr" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.26" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "regex-automata";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.26" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.6.26";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "49b3de9ec5dc0a3417da371aab17d729997c15010e7fd24ff707773a33bddb64"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "unicode" ]
      [ "unicode-age" ]
      [ "unicode-bool" ]
      [ "unicode-case" ]
      [ "unicode-gencat" ]
      [ "unicode-perl" ]
      [ "unicode-script" ]
      [ "unicode-segment" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.3" = overridableMkRustCrate (profileName: rec {
    name = "remove_dir_all";
    version = "0.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3acd125665422973a33ac9d3dd2df85edad0f4ae9b00dafb1a05e43a9f5ef8e7"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rgb."0.8.33" = overridableMkRustCrate (profileName: rec {
    name = "rgb";
    version = "0.8.33";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c3b221de559e4a29df3b957eec92bc0de6bc8eaf6ca9cfed43e5e1d67ff65a34"; };
    features = builtins.concatLists [
      [ "as-bytes" ]
      [ "bytemuck" ]
      [ "default" ]
    ];
    dependencies = {
      bytemuck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.9.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.21" = overridableMkRustCrate (profileName: rec {
    name = "rustc-demangle";
    version = "0.1.21";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7ef03e0a2b150c7a90d01faf6254c9c48a41e95fb2a8c2ac1c6f0d2b9aefc342"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "rustc_version";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f0dfe2087c51c460008730de8b57e6a320782fbfb312e1f4d520e6c6fae155ee"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "semver" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.11.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_version";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366"; };
    dependencies = {
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."1.0.10" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rusty-fork."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "rusty-fork";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cb3dcc6e454c328bb824492db107ab7c0ae8fcffe4ad210136ef014458c1bc4f"; };
    features = builtins.concatLists [
      [ "timeout" ]
      [ "wait-timeout" ]
    ];
    dependencies = {
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
      quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" { inherit profileName; };
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.3.0" { inherit profileName; };
      wait_timeout = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wait-timeout."0.2.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.10" = overridableMkRustCrate (profileName: rec {
    name = "ryu";
    version = "1.0.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f3f6f92acf49d1b98f7a81226834412ada05458b7364277387724a237f062695"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" = overridableMkRustCrate (profileName: rec {
    name = "same-file";
    version = "1.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "scopeguard";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".semver."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "semver";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f301af10236f6df4160f7c3f04eec6dbc70ace82d23326abad5edee88801c6b6"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "semver_parser" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.10.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".semver."1.0.10" = overridableMkRustCrate (profileName: rec {
    name = "semver";
    version = "1.0.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a41d061efea015927ac527063765e73601444cdc344ba855bc7bd44578b25e1c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.10.2" = overridableMkRustCrate (profileName: rec {
    name = "semver-parser";
    version = "0.10.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "00b0bef5b7f9e0df16536d3961cfb6e84331c065b4066afb39768d0e319411f7"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "pest" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.1.3" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.137" = overridableMkRustCrate (profileName: rec {
    name = "serde";
    version = "1.0.137";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "61ea8d54c77f8315140a05f4c7237403bf38b72704d031543aa1d16abbf517d1"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_cbor."0.11.2" = overridableMkRustCrate (profileName: rec {
    name = "serde_cbor";
    version = "0.11.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2bef2ebfde456fb76bbcf9f59315333decc4fda0b2b44b420243c11e0f5ec1f5"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      half = rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."1.8.2" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.137" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.137" = overridableMkRustCrate (profileName: rec {
    name = "serde_derive";
    version = "1.0.137";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1f26faba0c3959972377d3b2d306ee9f71faee9714294e41bb777f83f88578be"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.98" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.81" = overridableMkRustCrate (profileName: rec {
    name = "serde_json";
    version = "1.0.81";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9b7ce2b32a1aed03c558dc61a5cd328f15aff2dbc17daad8fb8af04d2100e15c"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.2" { inherit profileName; };
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.10" { inherit profileName; };
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.137" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".servo-fontconfig."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "servo-fontconfig";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c7e3e22fe5fd73d04ebf0daa049d3efe3eae55369ce38ab16d07ddd9ac5c217c"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "fontconfig_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".servo-fontconfig-sys."5.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".servo-fontconfig-sys."5.1.0" = overridableMkRustCrate (profileName: rec {
    name = "servo-fontconfig-sys";
    version = "5.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e36b879db9892dfa40f95da1c38a835d41634b825fbd8c4c418093d53c24b388"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "expat_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".expat-sys."2.1.6" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "freetype_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".freetype-sys."0.13.1" { inherit profileName; };
    };
    buildDependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "pkg_config" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.25" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.8.0" = overridableMkRustCrate (profileName: rec {
    name = "smallvec";
    version = "1.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f2dd574626839106c320a323308629dcb1acfc96e32a8cba364ddc61ac23ee83"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "stable_deref_trait";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "static_assertions";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".str_stack."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "str_stack";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9091b6114800a5f2141aee1d1b9d6ca3592ac062dc5decb3764ec5895a47b4eb"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strsim."0.9.3" = overridableMkRustCrate (profileName: rec {
    name = "strsim";
    version = "0.9.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6446ced80d6c486436db5c078dde11a9f73d42b57fb273121e160b84f63d894c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".subtle."2.4.1" = overridableMkRustCrate (profileName: rec {
    name = "subtle";
    version = "2.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6bdef32e8150c2a081110b42772ffe7d7c9032b606bc226c8260fd97e0976601"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "i128" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".symbolic-common."8.8.0" = overridableMkRustCrate (profileName: rec {
    name = "symbolic-common";
    version = "8.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f551f902d5642e58039aee6a9021a61037926af96e071816361644983966f540"; };
    dependencies = {
      debugid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".debugid."0.7.3" { inherit profileName; };
      memmap2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memmap2."0.5.4" { inherit profileName; };
      stable_deref_trait = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.2.0" { inherit profileName; };
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."0.8.2" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".symbolic-demangle."8.8.0" = overridableMkRustCrate (profileName: rec {
    name = "symbolic-demangle";
    version = "8.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4564ca7b4e6eb14105aa8bbbce26e080f6b5d9c4373e67167ab31f7b86443750"; };
    features = builtins.concatLists [
      [ "cpp" ]
      [ "cpp_demangle" ]
      [ "rust" ]
      [ "rustc-demangle" ]
    ];
    dependencies = {
      cpp_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpp_demangle."0.3.5" { inherit profileName; };
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.21" { inherit profileName; };
      symbolic_common = rustPackages."registry+https://github.com/rust-lang/crates.io-index".symbolic-common."8.8.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.98" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "1.0.98";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c50aef8a904de4c23c788f104b7dddc7d6f79c647c7c8ce4cc8f73eb0ca773dd"; };
    features = builtins.concatLists [
      [ "clone-impls" ]
      [ "default" ]
      [ "derive" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "extra-traits")
      [ "full" ]
      [ "parsing" ]
      [ "printing" ]
      [ "proc-macro" ]
      [ "quote" ]
      [ "visit" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tabbycat."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "tabbycat";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c45590f0f859197b4545be1b17b2bc3cc7bb075f7d1cc0ea1dc6521c0bf256a3"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat") "attributes")
    ];
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "anyhow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.58" { inherit profileName; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "derive_builder" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_builder."0.9.0" { profileName = "__noProfile"; };
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/tabbycat" then "regex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.5.6" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "tap";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.3.0" = overridableMkRustCrate (profileName: rec {
    name = "tempfile";
    version = "3.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5cdb1ef4eaeeaddc8fbd371e5017057064af0911902ef36b39801f67cc6d79e4"; };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      fastrand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."1.7.0" { inherit profileName; };
      ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.2.13" { inherit profileName; };
      remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.3" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".textwrap."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "textwrap";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060"; };
    dependencies = {
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.31" = overridableMkRustCrate (profileName: rec {
    name = "thiserror";
    version = "1.0.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bd829fe32373d27f76265620b5309d0340cb8550f523c1dda251d6298069069a"; };
    dependencies = {
      thiserror_impl = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.31" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.31" = overridableMkRustCrate (profileName: rec {
    name = "thiserror-impl";
    version = "1.0.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0396bc89e626244658bef819e22d0cc459e795a5ebe878e6ec336d1674a8d79a"; };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.98" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".time."0.1.44" = overridableMkRustCrate (profileName: rec {
    name = "time";
    version = "0.1.44";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6db9e6914ab8b1ae1c260a4ae7a49b6c5611b40328a735b21862567685e73255"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.10.0+wasi-snapshot-preview1" { inherit profileName; };
      ${ if (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") && hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tinytemplate."1.2.1" = overridableMkRustCrate (profileName: rec {
    name = "tinytemplate";
    version = "1.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc"; };
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.137" { inherit profileName; };
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.81" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ttf-parser."0.12.3" = overridableMkRustCrate (profileName: rec {
    name = "ttf-parser";
    version = "0.12.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7ae2f58a822f08abdaf668897e96a5656fe72f5a9ce66422423e8849384872e6"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "std")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "variable-fonts")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ucd-trie."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "ucd-trie";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "56dee185309b50d1f11bfedef0fe6d036842e3fb77413abef29f8f8d1c5d4c1c"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".uint."0.9.3" = overridableMkRustCrate (profileName: rec {
    name = "uint";
    version = "0.9.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "12f03af7ccf01dd611cc450a0d10dbc9b745770d096473e2faf0ca6e2d66d1e0"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" { inherit profileName; };
      crunchy = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.2" { inherit profileName; };
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" { inherit profileName; };
      static_assertions = rustPackages."registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "unicode-ident";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5bd2fe26506023ed7b5e1e315add59d6f584c621d037f9368fea9cfb988f368c"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.9" = overridableMkRustCrate (profileName: rec {
    name = "unicode-width";
    version = "0.1.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3ed742d4ea2bd1176e236172c8429aaf54486e7ac098db29ffe6529e0ce50973"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".uuid."0.8.2" = overridableMkRustCrate (profileName: rec {
    name = "uuid";
    version = "0.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bc5cf98d8186244414c848017f0e2676b3fcb46807f6668a97dfe67359a3c4b7"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" = overridableMkRustCrate (profileName: rec {
    name = "version_check";
    version = "0.9.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wait-timeout."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "wait-timeout";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.126" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.2" = overridableMkRustCrate (profileName: rec {
    name = "walkdir";
    version = "2.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "808cf2735cd4b6866113f648b791c6adc5714537bc222d9347bb203386ffda56"; };
    dependencies = {
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasi."0.10.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
    name = "wasi";
    version = "0.10.0+wasi-snapshot-preview1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1a143597ca7c7793eff794def352d41792a93c481eb1042423ff7ff72ba2c31f"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
    name = "wasi";
    version = "0.11.0+wasi-snapshot-preview1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.81" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen";
    version = "0.2.81";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7c53b543413a17a202f4be280a7e5c62a1c69345f5de525ee64f8cfdbc954994"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "spans" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
      wasm_bindgen_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.81" { profileName = "__noProfile"; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.81" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-backend";
    version = "0.2.81";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5491a68ab4500fa6b4d726bd67408630c3dbe9c4fe7bda16d5c82a1fd8c7340a"; };
    features = builtins.concatLists [
      [ "spans" ]
    ];
    dependencies = {
      bumpalo = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.10.0" { inherit profileName; };
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.98" { inherit profileName; };
      wasm_bindgen_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.81" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.81" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-macro";
    version = "0.2.81";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c441e177922bc58f1e12c022624b6216378e5febc2f0533e41ba443d505b80aa"; };
    features = builtins.concatLists [
      [ "spans" ]
    ];
    dependencies = {
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      wasm_bindgen_macro_support = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.81" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.81" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-macro-support";
    version = "0.2.81";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7d94ac45fcf608c1f45ef53e748d35660f168490c10b23704c7779ab8f5c3048"; };
    features = builtins.concatLists [
      [ "spans" ]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.40" { inherit profileName; };
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.20" { inherit profileName; };
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.98" { inherit profileName; };
      wasm_bindgen_backend = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.81" { inherit profileName; };
      wasm_bindgen_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.81" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.81" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-shared";
    version = "0.2.81";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6a89911bd99e5f3659ec4acf9c4d93b0a90fe4a2a11f15328472058edc5261be"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.58" = overridableMkRustCrate (profileName: rec {
    name = "web-sys";
    version = "0.3.58";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2fed94beee57daf8dd7d51f2b15dc2bcde92d7a72304cdf662a4371008b71b90"; };
    features = builtins.concatLists [
      [ "CanvasRenderingContext2d" ]
      [ "Document" ]
      [ "DomRect" ]
      [ "DomRectReadOnly" ]
      [ "Element" ]
      [ "EventTarget" ]
      [ "HtmlCanvasElement" ]
      [ "HtmlElement" ]
      [ "Node" ]
      [ "Window" ]
    ];
    dependencies = {
      js_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.58" { inherit profileName; };
      wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.81" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".weezl."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "weezl";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9c97e489d8f836838d497091de568cf16b117486d529ec5579233521065bd5e4"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "alloc")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "default")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.3.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419"; };
    features = builtins.concatLists [
      [ "consoleapi" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "dwrite")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "dwrite_1")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "dwrite_3")
      [ "errhandlingapi" ]
      [ "fileapi" ]
      [ "handleapi" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "knownfolders")
      [ "libloaderapi" ]
      [ "memoryapi" ]
      [ "minwinbase" ]
      [ "minwindef" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "ntdef")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "objbase")
      [ "processenv" ]
      [ "processthreadsapi" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "profileapi")
      [ "psapi" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "shlobj")
      [ "std" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "sysinfoapi")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "timezoneapi")
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "unknwnbase")
      [ "winbase" ]
      [ "wincon" ]
      [ "winerror" ]
      (lib.optional (rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters") "winnls")
      [ "winnt" ]
    ];
    dependencies = {
      ${ if hostPlatform.config == "i686-pc-windows-gnu" then "winapi_i686_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-pc-windows-gnu" then "winapi_x86_64_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "winapi-util";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.36.1" = overridableMkRustCrate (profileName: rec {
    name = "windows-sys";
    version = "0.36.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ea04155a16a59f9eab786fe12a4a450e75cdb175f9e0d80da1e17db09f55b8d2"; };
    features = builtins.concatLists [
      [ "Win32" ]
      [ "Win32_Foundation" ]
      [ "Win32_System" ]
      [ "Win32_System_LibraryLoader" ]
      [ "Win32_System_SystemServices" ]
      [ "Win32_System_WindowsProgramming" ]
      [ "default" ]
    ];
    dependencies = {
      ${ if hostPlatform.config == "aarch64-pc-windows-msvc" || hostPlatform.config == "aarch64-uwp-windows-msvc" then "windows_aarch64_msvc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.36.1" { inherit profileName; };
      ${ if hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-uwp-windows-gnu" then "windows_i686_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.36.1" { inherit profileName; };
      ${ if hostPlatform.config == "i686-pc-windows-msvc" || hostPlatform.config == "i686-uwp-windows-msvc" then "windows_i686_msvc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.36.1" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-uwp-windows-gnu" then "windows_x86_64_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.36.1" { inherit profileName; };
      ${ if hostPlatform.config == "x86_64-pc-windows-msvc" || hostPlatform.config == "x86_64-uwp-windows-msvc" then "windows_x86_64_msvc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.36.1" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.36.1" = overridableMkRustCrate (profileName: rec {
    name = "windows_aarch64_msvc";
    version = "0.36.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9bb8c3fd39ade2d67e9874ac4f3db21f0d710bee00fe7cab16949ec184eeaa47"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.36.1" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_gnu";
    version = "0.36.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "180e6ccf01daf4c426b846dfc66db1fc518f074baa793aa7d9b9aaeffad6a3b6"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.36.1" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_msvc";
    version = "0.36.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e2e7917148b2812d1eeafaeb22a97e4813dfa60a3f8f78ebe204bcc88f12f024"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.36.1" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_gnu";
    version = "0.36.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4dcd171b8776c41b97521e5da127a2d86ad280114807d0b2ab1e462bc764d9e1"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.36.1" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_msvc";
    version = "0.36.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c811ca4a8c853ef420abd8592ba53ddbbac90410fab6903b3e79972a631f7680"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wio."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "wio";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5d129932f4644ac2396cb456385cbf9e63b5b30c6e8dc4820bdca4eb082037a5"; };
    dependencies = {
      ${ if rootFeatures' ? "halo2_gadgets/dev-graph" || rootFeatures' ? "halo2_gadgets/plotters" || rootFeatures' ? "halo2_proofs/dev-graph" || rootFeatures' ? "halo2_proofs/plotters" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wyz."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "wyz";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "30b31594f29d27036c383b53b59ed3476874d518f0efb151b27a4c275141390e"; };
    dependencies = {
      tap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" { inherit profileName; };
    };
  });
  
}
